#!/bin/bash

#colors
white="\033[1;37m"                                          ##
grey="\033[0;37m"                                           ##
purple="\033[0;35m"                                         ##
red="\033[1;31m"                                            ##
lred="\033[0;91m"                                           ##
green="\033[1;32m"                                          ##
lgreen="\033[0;92m"                                         ##
yellow="\033[1;33m"                                         ##
purple="\033[0;35m"                                         ##
cyan="\033[0;36m"                                           ##
cyan1="\033[1;36m"                                          ##
cafe="\033[0;33m"                                           ##
fiuscha="\033[0;35m"                                        ##
blue="\033[1;34m"                                           ##
nc="\e[0m"

dir=`pwd`
user_id="$(logname)"
ngrok_url_login="https://dashboard.ngrok.com/login"
ngrok_url_signup="https://dashboard.ngrok.com/signup"

############### main setup ######################

# 1. --> copy notify icon to /usr/share/hackadroid/icon/hackadroid.png
      
#    --> give path to exploit to /usr/share/hackadroid/metasploit-framework*/msfconsole

# 2. --> same as above notify icon 

# 3. --> path for jar pk8 and certificate.pem to /usr/share/hackadroid/signapk & notify icon

# 4. --> under maintainance

# 5. --> dont go to decompile file instead decompile to present dir

# 6. --> same as above

# 7. --> same as option 1 path to exploit

# 8 -14. --> same as all above just try for whiptail for good interactive script


############# end of main setup ##################

hackadroid_dir="/usr/share/hackadroid"

msg() {
	printf "${blue}[-] ${green}${1}\n${nc}"
}

norm_msg() {
	printf "${green}${1}\n${nc}"
}

error_msg() {
        printf "${white}[!] ${red}${1}\n${nc}"
}

function check_root() {
        if [ "$(whoami &2>/dev/null)" != "root" ] && [ "$(id -un &2>/dev/null)" != "root" ]
	then
                echo;
                error_msg "admin user detected"
                echo;
                error_msg "you must be root to run this script!"
                echo;
                error_msg "use 'sudo !!'"
                echo;
                exit 1
	fi
}

check_root

#spinner
spinner() {
        pid=$!
        spin='\|/-'
        i=0
        tput civis
        while kill -0 $pid 2>/dev/null
	do
                i=$(( (i+1) %4 ))
                printf "\r${cyan1}[${spin:$i:1}]${nc} ${cyan1} $launch"
                sleep .1
	done
        printf "\r   ${green}[✔]${nc} ${green} $splashdown"
        sleep 1;echo
        tput cnorm
}

function check_net() {
        ping -c 1 google.com > /dev/null 2>&1
        if [[ "$?" != 0 ]]
        then
                error_msg "No Inernet"
                exit 1
        fi
}

check_net

os_release() {	
        grep kali /etc/os-release > /dev/null 2>&1
        if [ $? -eq 0 ]; then			
                os=kali
	else		
	        error_msg "unsupported architecture"
	        exit 1       
	fi
}

os_release

#mirror script for stable download speed

mirror() {
	sudo apt update
        sudo apt install git
        git clone https://github.com/IceM4nn/mirrorscript-v2.git
        cd mirrorscript-v2
        chmod +x *
        python3 mirrorscript-v2.py -v -https -src
	cd .. && rm -rf mirrorscript-v2 > /dev/null && apt-get autoclean && sudo apt update
}

mirror

# update system and get libpq-dev libcap-dev

update() {	
	launch="updating your system"
	splashdown="updated your system"
	(sudo apt update -y > /dev/null 2>&1 && sudo apt install xterm libpq-dev libpcap-dev libsqlite3-dev -y > /dev/null 2>&1) & spinner
}

update

check_dependencies () {		
	echo -ne '\e[8;41;95t' 
	clear
	echo -e $white
        echo "Hackadroid Framework v1.0.1"
        echo -e $yellow	
	echo "Checking for hackadroid dependencies"
	echo
	# METASPLOIT-FRAMEWORK
	which msfconsole > /dev/null 2>&1
        if [ "$?" -eq "0" ]; then		
                echo -e $green "[ ✔ ] Metasploit-Framework..............${lgreen}[ found ]"
                sleep 2		
        else		
                echo -e $red "[ X ] Metasploit-Framework.............................${lred}[ missing! ]"
                sleep 2              
                xterm -T "Hackadroid" -e "sudo apt-get install metasploit-framework -y" 
		sleep 1                                      
	fi       
	# ZENITY
	echo
        which zenity > /dev/null 2>&1
        if [ "$?" -eq "0" ]; then		
                echo -e $green "[ ✔ ] Zenity............................${lgreen}[ found ]"
                sleep 2
	else		
                echo -e $red "[ X ] Zenity.............................${lred}[ missing! ]"
                sleep 2              
                xterm -T "Hackadroid" -e "sudo apt-get install zenity -y" 
		sleep 1                
	fi	
	# ANDROID_FRAMEWORK_RES	
	echo
        which aapt > /dev/null 2>&1
        if [ "$?" -eq "0" ]; then
                echo -e $green "[ ✔ ] Aapt..............................${lgreen}[ found ]"
                sleep 2
	else
                echo -e $red "[ X ] Android-framewrok-res.............................${lred}[ missing! ]"
                sleep 2              
                xterm -T "Hackadroid" -e "sudo apt-get install android-framework-res -y" 
		xterm -T "Hackadroid" -e "sudo apt-get install aapt -y"
		sleep 1              
	fi
	# APKTOOL
        echo	
        which apktool > /dev/null 2>&1
        if [ "$?" -eq "0" ]; then
                echo -e $green "[ ✔ ] Apktool...........................${lgreen}[ found ]"
                sleep 2
        else
                echo -e $red "[ X ] Apktool.............................${lred}[ missing! ]"
                sleep 2              
                xterm -T "Hackadroid" -e "sudo apt-get install apktool -y" 
		sleep 1                
	fi
	# ZIPALIGN
	echo
        which zipalign > /dev/null 2>&1
        if [ "$?" -eq "0" ]; then
                echo -e $green "[ ✔ ] Zipalign..........................${lgreen}[ found ]"               
                sleep 2
        else
                echo -e $red "[ X ] Zipalign.............................${lred}[ missing! ]"
                sleep 2              
                xterm -T "Hackadroid" -e "sudo apt-get install zipalign -y" 
		sleep 1                
	fi
	# DEFAULT-JDK
	echo
        which java > /dev/null 2>&1
        if [ "$?" -eq "0" ]; then
                echo -e $green "[ ✔ ] Default-jdk.......................${lgreen}[ found ]"                
                sleep 2
        else
                echo -e $red "[ X ] Default-jdk..........................${lred}[ missing! ]"
                sleep 2
                xterm -T "Hackadroid" -e "sudo apt-get install default-jdk -y"
		sleep 1                
	fi
	# BC
	echo
        which bc > /dev/null 2>&1
        if [ "$?" -eq "0" ]; then
                echo -e $green "[ ✔ ] Bc................................${lgreen}[ found ]"               
                sleep 2
        else
                echo -e $red "[ X ] Bc...................................${lred}[ missing! ]"
                sleep 2
                xterm -T "Hackadroid" -e "sudo apt-get install bc -y"
		sleep 1                
	fi
	# JQ
	echo
        which jq > /dev/null 2>&1
        if [ "$?" -eq "0" ]; then
                echo -e $green "[ ✔ ] Jq................................${lgreen}[ found ]"                
                sleep 2
        else
                echo -e $red "[ X ] Jq...................................${lred}[ missing! ]"
                sleep 2
                xterm -T "Hackadroid" -e "sudo apt-get install jq -y"
		sleep 1                
	fi
	# CURL
	echo
        which curl > /dev/null 2>&1
        if [ "$?" -eq "0" ]; then
                echo -e $green "[ ✔ ] Curl..............................${lgreen}[ found ]"              
                sleep 2
        else
                echo -e $red "[ X ] Curl.................................${lred}[ missing! ]"
                sleep 2
                xterm -T "Hackadroid" -e "sudo apt-get install curl -y"
		sleep 1                
	fi
	# LIBNOTIFY-BIN
	echo
        which notify-send > /dev/null 2>&1
        if [ "$?" -eq "0" ]; then
                echo -e $green "[ ✔ ] Libnotify-bin.....................${lgreen}[ found ]"                
                sleep 2
        else
                echo -e $red "[ X ] libnotify-bin........................${lred}[ missing! ]"
                sleep 2
                xterm -T "Hackadroid" -e "sudo apt-get install libnotify-bin -y"
		                
	fi
	# XDG-UTILS
	echo
        which xdg-open > /dev/null 2>&1
        if [ "$?" -eq "0" ]; then
                echo -e $green "[ ✔ ] Xdg-utils.........................${lgreen}[ found ]"            
                sleep 2
        else
                echo -e $red "[ X ] Xdg-utils............................${lred}[ missing! ]"
                sleep 2
                xterm -T "Hackadroid" -e "sudo apt-get install xdg-utils -y"
	fi
	# GNOME-TERMINAL
	echo
        which gnome-terminal > /dev/null 2>&1
        if [ "$?" -eq "0" ]; then
                echo -e $green "[ ✔ ] Gnome-terminal....................${lgreen}[ found ]"                
                sleep 2
        else
                echo -e $red "[ X ] Gnome-terminal.......................${lred}[ missing! ]"
                sleep 2              
                xterm -T "Hackadroid" -e "sudo apt-get install gnome-terminal -y" 		         
	fi
	# APACHE2
	echo
        which apache2 > /dev/null 2>&1
        if [ "$?" -eq "0" ]; then
                echo -e $green "[ ✔ ] Apache2...........................${lgreen}[ found ]"               
                sleep 2
        else
                echo -e $red "[ X ] Apache2..............................${lred}[ missing! ]"
                sleep 2
                xterm -T "Hackadroid" -e "sudo apt-get install apache2 -y"                
	fi
	# WGET
	echo
        which wget > /dev/null 2>&1
        if [ "$?" -eq "0" ]; then
                echo -e $green "[ ✔ ] Wget..............................${lgreen}[ found ]"                
                sleep 2
        else
                echo -e $red "[ X ] Wget.................................${lred}[ missing! ]"
                sleep 2
                xterm -T "Hackadroid" -e "sudo apt-get install wget -y"		                
	fi
	# NGROK
	echo
        which ngrok > /dev/null 2>&1
        if [ "$?" -eq "0" ]; then
                echo -e $green "[ ✔ ] Ngrok.............................${lgreen}[ found ]"                
                sleep 2
        else
                echo -e $red "[ X ] Ngrok................................${lred}[ missing! ]"
                sleep 2
                xterm -T "Hackadroid" -e "wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip"
		unzip ngrok-stable-linux-amd64.zip > /dev/null 2>&1 && mv ngrok /usr/local/bin && rm -rf ngrok-stable-linux-amd64.zip > /dev/null 2>&1
		login_signup=$(zenity --question --title "NGROK" --text "Already have an ngrok account" --width 300 --height 100 2> /dev/null)
		if [ $? -eq 0 ];then
			sudo -u $user_id -H firefox --new-tab $ngrok_url_login > /dev/null 2>&1 &
			sleep 10
		else
			sudo -u $user_id -H firefox --new-tab $ngrok_url_signup > /dev/null 2>&1 &
			sleep 10
		fi
                ngrok_token=$(zenity --title "NGROK TOKEN" --text "enter your ngrok authtoken" --entry --entry-text "./ngrok authtoken <your_auth_token>" --width 300 --height 120 2> /dev/null) && $ngrok_token >> /dev/null 2>&1                
	fi
}

check_dependencies
check_dependencies

install_msf() {	
	wget https://raw.githubusercontent.com/just-hack/hackadroid-setup/main/metasploit-framework-5.0.101.zip
	unzip metasploit-framework-5.0.101.zip > /dev/null 2>&1
	rm -rf metasploit-framework-5.0.101.zip > /dev/null 2>&1   	
	launch="Fetching gem"
	splashdown="Fetched gem";echo
	(xterm -T "BUNDLE & GEMS INSTALLATION" -e "cd metasploit-framework* && sudo gem install bundler:1.17.3 && bundle install && cd .. && sleep 6") & spinner;echo -e "\e[0m"
        whiptail --title "Installation Completed" --msgbox "If any error in installation open issue on gitub or hit OK to continue" 8 78
}

install_msf
